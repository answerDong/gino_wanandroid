import 'dart:convert';
import 'package:card_swiper/card_swiper.dart';
import 'package:easy_refresh/easy_refresh.dart';
import 'package:flutter/material.dart';
import 'package:gino_wanandroid/entity/article_entity.dart';
import '../common/net_api.dart';
import '../entity/banner_entity.dart';
import '../http/http_utils.dart';

///主页面
class HomePage extends StatefulWidget {
  const HomePage({Key? key}) : super(key: key);

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  List<BannerData>? bannerDatas = [];
  List<AutogeneratedDataDatas>? articleDatas = [];

  late ScrollController _scrollController;
  late SwiperController _swiperController;

  int _page = 0;

  @override
  void initState() {
    super.initState();
    _scrollController = ScrollController()..addListener(() {});
    _swiperController = SwiperController();
    getHttp();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: EasyRefresh(
        header: const ClassicHeader(),
        footer: const ClassicFooter(),
        onRefresh: () async {
          await Future.delayed(const Duration(seconds: 1), () {
            setState(() {
              _page = 0;
            });
            getHttp();
          });
        },
        onLoad: () async {
          await Future.delayed(Duration(seconds: 1), () async {
            setState(() {
              _page++;
            });
            getMoreData();
          });
        },
        child: CustomScrollView(
          scrollDirection: Axis.vertical,
          slivers: [
            SliverList(
              delegate: SliverChildBuilderDelegate((context, index) {
                if (index == 0) return getBanner();
                int length = articleDatas?.length ?? 0;
                if (index < length - 1) return getRow(index);
                return null;
              }, childCount:  articleDatas?.length ?? 0 + 1),
            )
          ],
        ),
      ),
    );
  }

  //数据请求
  void getHttp() async {
    try {
      // banner
      var bannerResponse = await HttpUitls.getInstance().get(NewApi.BANNER);
      Map bannerMap = json.decode(bannerResponse.toString());
      var bannerEntity = BannerEntity.fromJson(bannerMap);
      //article
      var articleResponse = await HttpUitls.getInstance()
          .get("${NewApi.ARTICLE_LIST}$_page/json");
      Map articleMap = json.decode(articleResponse.toString());
      var articleEntity = Autogenerated.fromJson(articleMap);

      //更新状态
      setState(() {
        bannerDatas = bannerEntity.data;
        articleDatas = articleEntity?.data?.datas;
      });

      _swiperController.startAutoplay();
    } catch (e) {
      print(e);
    }
  }

  ///bannder控件
  Widget getBanner() {
    return Container(
      width: MediaQuery.of(context).size.width,
      //1.8是banner宽高比，0.8是viewportFraction的值
      height: MediaQuery.of(context).size.width / 1.8 * 0.8,
      padding: const EdgeInsets.only(top: 10),
      child: Swiper(
        itemCount: bannerDatas!.length,
        itemBuilder: (BuildContext context, int index) {
          return Container(
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular((10.0)), // 圆角度
              image: DecorationImage(
                image: NetworkImage(bannerDatas![index]!.imagePath!),
                fit: BoxFit.fill,
              ),
            ),
          );
        },
        loop: false,
        autoplay: false,
        autoplayDelay: 3000,
        //触发时是否停止播放
        autoplayDisableOnInteraction: true,
        duration: 600,
        //默认分页按钮
        controller: _swiperController,
        //默认指示器
        pagination: const SwiperPagination(
          // SwiperPagination.fraction 数字1/5，默认点
          builder: DotSwiperPaginationBuilder(size: 6, activeSize: 9),
        ),

        //视图宽度，即显示的item的宽度屏占比
        viewportFraction: 0.8,
        //两侧item的缩放比
        scale: 0.9,
        onTap: (int index) {
          //点击事件，返回下标
          print("index-----" + index.toString());
        },
      ),
    );
  }

  Widget getRow(int i) {
    return GestureDetector(
      child: Container(
          padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 5),
          child: ListTile(
            leading: IconButton(
              icon: articleDatas?[i].collect ?? false
                  ? Icon(
                      Icons.favorite,
                      color: Theme.of(context).primaryColor,
                    )
                  : const Icon(Icons.favorite_border),
              tooltip: '收藏',
              onPressed: () {
                // if (articleDatas[i].collect) {
                //   cancelCollect(articleDatas[i].id);
                // } else {
                //   addCollect(articleDatas?[i].id ?? 1);
                // }
              },
            ),
            title: Text(
              articleDatas?[i].title ?? "",
              maxLines: 2,
              overflow: TextOverflow.ellipsis,
            ),
            subtitle: Padding(
              padding: EdgeInsets.only(top: 10.0),
              child: Row(
                children: <Widget>[
                  Container(
                    padding: EdgeInsets.symmetric(horizontal: 6),
                    decoration: BoxDecoration(
                      border: Border.all(
                        color: Theme.of(context).primaryColor,
                        width: 1.0,
                      ),
                      borderRadius: BorderRadius.circular((20.0)), // 圆角度
                    ),
                    child: Text(
                      articleDatas?[i].superChapterName ?? "",
                      style: TextStyle(color: Theme.of(context).primaryColor),
                    ),
                  ),
                  Container(
                    margin: const EdgeInsets.only(left: 10),
                    child: Text(articleDatas?[i].author ?? ""),
                  ),
                ],
              ),
            ),
            trailing: const Icon(Icons.chevron_right),
          )),
      onTap: () {
        if (0 == 1) return;
        // Navigator.push(
        //   context,
        //   MaterialPageRoute(
        //     builder: (context) => ArticleDetail(
        //         title: articleDatas?[i].title, url: articleDatas?[i].link),
        //   ),
        // );
      },
    );
  }

  Future getMoreData() async {
    var response = await HttpUitls.getInstance().get("${NewApi.
    ARTICLE_LIST}$_page/json");
    Map map = json.decode(response.toString());
    var articleEntity = Autogenerated.fromJson(map);
    setState(() {
      var data = articleEntity?.data?.datas;
      if(data !=null) {
        for(AutogeneratedDataDatas a in data!) {
          articleDatas?.add(a!);
        }
      }
    });
  }

  @override
  void dispose() {
    _scrollController.dispose();
    _swiperController.stopAutoplay();
    _swiperController.dispose();
    super.dispose();
  }
}
